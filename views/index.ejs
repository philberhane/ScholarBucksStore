<% include ./partials/header %>
<div id = "body" class = "ui container">
	<h1>
			   <%= firstname%> <%= lastname%> 
		 Student Roster
	</h1>
	<!-- <input class="ui primary button" value="Quick Add">
	<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title" id="exampleModalLabel">Candidates</h5>
                  <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                  </button>
                </div>
                <div id="modalBody" class="modal-body" style="text-align: center">
					<form>
                  <input placeholder="username"/>
					</form>
                </div>
                <div class="modal-footer">
                </div>
              </div>
            </div>
          </div> -->
	<div style="padding-bottom: 25px">
	<div style="display: inline-block">
	<button class="saveAsExcel ui floated tiny button" onclick="sessionAndReload()">
		Export Data
	</button>
		</div>
		<input class="ui floated tiny button" type="file" name="File Upload" id="txtFileUpload" accept=".csv, .xlsx" data-buttonText="Import Data" />
<button class="ui floated tiny button" style="margin-bottom: 15px" onclick="myFunction()">
	Reset All Orders
	</button>
		<button class="ui floated tiny button" style="margin-bottom: 15px" onclick="saveAll()">
	Save All
	</button>
		</div>
	<p id="loading">
		
	</p>

<table id="studenttable" class="ui sortable celled table">
  <thead>
    <tr><th class="th">Name</th>
    
    <th>Username</th>
		<th>Math Pts.</th>
		<th>Reading Pts.</th>
		<th class="th">School</th>
		<th class="th">Grade</th>
		<th class="th">Math Teacher</th>
		<th class="th">Reading Teacher</th>
		<th class="th">Current Points</th>
		<th class="th">Starting Balance</th>
		<th class="th">CarryOver Points</th>
		<th class="th">Orders</th>
		<th>Update-Delete</th>
  </tr></thead>
  <tbody>
	  <% students.forEach(function(student){ %>
    <tr>
		<form action="/edittable" method="POST">
      <td data-label="Name" class="td"><%=student.firstname%> <%=student.lastname%></td>
      <input name="username" value="<%= student.username%>" type="hidden">
      <td data-label="Passcode"><%=student.username%></td>
		<td data-label="Math Points"><input name="mathpts" type="number" style="width: 50%" value="<%=student.mathpts%>" ></td>
		<td data-label="Reading Points"><input name="readingpts" type="number" style="width: 50%" value="<%=student.readingpts%>" ></td>
		<td data-label="School" class="td"><input name="school" value="<%=student.school%>" ></td>
		<td data-label="Grade" class="td"><input name="grade" style="width: 50%" value="<%=student.grade%>"/></td>
		<td data-label="Math Teacher" class="td"><input name="mathteacher"  value="<%=student.mathteacher%>" style="width: 100%" /></td>
		<td data-label="Reading Teacher" class="td"><input name="readingteacher" value="<%=student.readingteacher%>"/></td>
		<td data-label="Current Points" class="td">
			<% if (student.totalpts === ''){%>
			<%=Number(student.mathpts) + Number(student.readingpts)%>
			<%} else {%>
			<%= student.totalpts%>
			<%}%>
		</td>
			<td data-label="Starting Points" class="td">
			<% if (student.startingPts === ''){%>
			0
			<%} else {%>
			<%= student.startingPts%>
			<%}%>
		</td>
			<td data-label="Carry Over Points" class="td">
			<% if (student.carryOverPts === ''){%>
			0
			<%} else {%>
			<%= student.carryOverPts%>
			<%}%>
		</td>
		<td data-label="Orders" class="td" style="width: 100%;">
			<% student.prizes.forEach(function(prize, index){ %>
			(<%=prize.quantity%>) <%=prize.prizeName%>
			<%if (index !== student.prizes.length-1){%>
				&amp;
			<%}%>
			<%})%>
		</td>
		<td data-label="Update-Delete"><a class="ui floated tiny primary button" href="/students/<%= student._id %>">
                                 Update/Delete
                                 
                             </a>
			<button type="submit" class="ui floated tiny orange button">Save Changes</button>
<a class="ui floated tiny red button" href="/students/reset/<%= student._id %>">Reset Order</a>

			</form>
		</tr>
		  <% }) %> 
  
  </tbody>
</table>
</div>
<script src="https://code.jquery.com/jquery-3.1.1.min.js">
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/tether/1.4.0/js/tether.min.js">
</script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js">
</script>
<script>
	if (typeof sessionStorage.download === 'undefined' && typeof sessionStorage.save === 'undefined') {
		$(document).ready(function() {
    $('#studenttable').DataTable({
	
		'lengthMenu': [ [10, 100, -1], [10, 100, "All"] ],
    'pageLength': 10
	});
} );
}else {
	$(document).ready(function() {
    $('#studenttable').DataTable({
		"paging": false
	});
	exportTableToCSV('orders.csv')
	sessionStorage.removeItem('download')
} );
}
		
		
	function sessionAndReload() {
		sessionStorage.download = 'download'
		location.reload()
	}
	function sessionAndSave() {
		sessionStorage.save = 'save'
		location.reload()
	}
	
function downloadCSV(csv, filename) {
    var csvFile;
    var downloadLink;

    // CSV file
    csvFile = new Blob([csv], {type: "text/csv"});

    // Download link
    downloadLink = document.createElement("a");

    // File name
    downloadLink.download = filename;

    // Create a link to the file
    downloadLink.href = window.URL.createObjectURL(csvFile);

    // Hide download link
    downloadLink.style.display = "none";

    // Add the link to DOM
    document.body.appendChild(downloadLink);

    // Click download link
    downloadLink.click();
}	
	
function exportTableToCSV(filename) {
    var csv = [];
    var rows = document.querySelectorAll("#studenttable tr");
    
    for (var i = 0; i < rows.length; i++) {
        var row = [], cols = rows[i].querySelectorAll(".td, .th");
        
        for (var j = 0; j < cols.length; j++) {
			if (cols[j].innerText.includes('(')) {
				for (k=0; k<cols[j].innerText.split('&').length; k++) {
					row.push(cols[j].innerText.split('&')[k]);
				}
			} else {
			if (cols[j].firstElementChild) {
					row.push(cols[j].firstElementChild.value);
				} else {
            	row.push(cols[j].innerText);
			}
		}
	}
		var tempRow = row.join(",").split(',')
		var row = row.join(",").split(',')
		var temp1 = tempRow[1]
		var temp2 = tempRow[3]
		var temp3 = tempRow[4]
		var temp4 = tempRow[0]
		var temp5 = tempRow[2]
		row[0] = temp1
		row[1] = temp2
		row[2] = temp3
		row[3] = temp4
		row[4] = temp5
		//row = row.join(",").split(',')
		console.log(row)
        csv.push(row.join(","));
    }

    // Download CSV file
    downloadCSV(csv.join("\n"), filename);
}
	function myFunction() {
  if (confirm("Please confirm you'd like to reset all orders")) {
    // hit up reset route
	  console.log('attempting api call')
	  var input = {}
	    fetch('/students/resetAll', {
                            method: 'POST',
                            body: JSON.stringify(input),
                            headers: { "Content-Type": "application/json"}
                        }).then(function(response) {
                            return response.json();
                        }).then(function(data) {
                            if (data.success === true) {
                              location.reload()
                            } else {
								alert('There has been an error! Please try again')
							}
                        })
  } else {
    
  }
}
	
	var editTableArray = []
			// The event listener for the file upload
		document.getElementById('txtFileUpload').addEventListener('change', upload, false);
	
		// Method that checks that the browser supports the HTML5 File API
		function browserSupportFileUpload() {
			var isCompatible = false;
			if (window.File && window.FileReader && window.FileList && window.Blob) {
				isCompatible = true;
			}

			return isCompatible;
		};

		function upload(evt) {
			if (!browserSupportFileUpload()) {
				alert('The File APIs are not fully supported in this browser!');
			} else {
                var data = null;
				var file = evt.target.files[0];
				var reader = new FileReader();
				reader.readAsText(file);
                reader.onload = function(event) {
						var csvData = event.target.result; //alert(csvData);
                        var data2 = csvData.split("\n"); 
					console.log(data2)
						document.getElementById('loading').innerText = 'Importing the data. Please wait..'
                        var i;
					for (i = 1; i < data2.length; ++i) {
						if (data2[i].split(',')[5].length > 0) {
						var studentObj = {
							username: data2[i].split(',')[5],
							mathpts: data2[i].split(',')[6],
							readingpts: data2[i].split(',')[7],
							readingteacher: data2[i].split(',')[11],
							mathteacher: data2[i].split(',')[10],
							school: data2[i].split(',')[8],
							grade: data2[i].split(',')[9],
							password: 'scholars20',
							studentid: data2[i].split(',')[1],
							firstname: data2[i].split(',')[3],
							lastname: data2[i].split(',')[4]
							
							}
						editTableArray.push(studentObj)
							}
					}
					console.log(editTableArray)
							editTableArray.forEach(function(input, index) {
							fetch('/edittableUpload', {
						method: 'POST',
						body: JSON.stringify(input),
						headers: { "Content-Type": "application/json"}
						}).then(function(response) {
						return response.json();
						}).then(function(data) {
						if (data.success === true) {
								if (index === editTableArray.length-1) {
									if (alert("You have successfully imported the data!")) {
										
									  } else {
										location.reload()
									  }
								}
						} else {
								return alert('There has been an error! Please try again')
							}
						})
						})
					};
					reader.onerror = function() {
						 alert('Unable to read ' + file.fileName);
					};
			};
		};
	
	 function saveAll() {
		document.getElementById('loading').innerText = 'Saving all student data. Please wait..'
		var table = $('#studenttable')

		  table.DataTable().destroy()
		 
		 var tableRows = document.querySelectorAll('tr')
		 console.log(tableRows)
	
		 

		tableRows.forEach(function(tr, index) {
			if (index > 0) {
			var input = {
				username: tr.firstElementChild.nextElementSibling.nextElementSibling.nextElementSibling.innerText,
				mathpts: tr.firstElementChild.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.firstElementChild.value,
				readingpts: tr.firstElementChild.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.firstElementChild.value,
				school: tr.firstElementChild.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.firstElementChild.value,
				grade: tr.firstElementChild.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.firstElementChild.value,
				mathteacher: tr.firstElementChild.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.firstElementChild.value,
				readingteacher: tr.firstElementChild.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.firstElementChild.value	
			}
			
			fetch('/edittableAll', {
						method: 'POST',
						body: JSON.stringify(input),
						headers: { "Content-Type": "application/json"}
						}).then(function(response) {
						return response.json();
						}).then(function(data) {
						if (data.success === true) {
								if (index === tableRows.length-1) {
									if (alert("You have successfully saved all of the student data!")) {
										
									  } else {
										location.reload()
									  }
								}
						} else {
								return alert('There has been an error! Please try again')
							}
						})
		}
		})
		
		

	}
	

</script>
<% include ./partials/footer %>

